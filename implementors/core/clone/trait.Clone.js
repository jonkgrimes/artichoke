(function() {var implementors = {};
implementors["aho_corasick"] = [{"text":"impl&lt;S:&nbsp;Clone + StateID&gt; Clone for AhoCorasick&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl Clone for AhoCorasickBuilder","synthetic":false,"types":[]},{"text":"impl Clone for MatchKind","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for ErrorKind","synthetic":false,"types":[]},{"text":"impl Clone for MatchKind","synthetic":false,"types":[]},{"text":"impl Clone for Config","synthetic":false,"types":[]},{"text":"impl Clone for Builder","synthetic":false,"types":[]},{"text":"impl Clone for Searcher","synthetic":false,"types":[]},{"text":"impl Clone for Match","synthetic":false,"types":[]}];
implementors["ansi_term"] = [{"text":"impl Clone for Prefix","synthetic":false,"types":[]},{"text":"impl Clone for Infix","synthetic":false,"types":[]},{"text":"impl Clone for Suffix","synthetic":false,"types":[]},{"text":"impl Clone for Style","synthetic":false,"types":[]},{"text":"impl Clone for Colour","synthetic":false,"types":[]},{"text":"impl&lt;'a, S:&nbsp;'a + ToOwned + ?Sized&gt; Clone for ANSIGenericString&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as ToOwned&gt;::Owned: Debug,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["artichoke"] = [{"text":"impl Clone for State","synthetic":false,"types":[]},{"text":"impl Clone for ParserAllocError","synthetic":false,"types":[]},{"text":"impl Clone for ParserLineCountError","synthetic":false,"types":[]},{"text":"impl Clone for ParserInternalError","synthetic":false,"types":[]},{"text":"impl Clone for PromptConfig","synthetic":false,"types":[]}];
implementors["artichoke_backend"] = [{"text":"impl Clone for NoBlockGiven","synthetic":false,"types":[]},{"text":"impl Clone for Block","synthetic":false,"types":[]},{"text":"impl Clone for Rclass","synthetic":false,"types":[]},{"text":"impl Clone for Spec","synthetic":false,"types":[]},{"text":"impl Clone for UnboxRubyError","synthetic":false,"types":[]},{"text":"impl Clone for BoxIntoRubyError","synthetic":false,"types":[]},{"text":"impl Clone for EnclosingRubyScope","synthetic":false,"types":[]},{"text":"impl Clone for ConstantNameError","synthetic":false,"types":[]},{"text":"impl Clone for NotDefinedError","synthetic":false,"types":[]},{"text":"impl Clone for CaughtException","synthetic":false,"types":[]},{"text":"impl Clone for ElementReference","synthetic":false,"types":[]},{"text":"impl Clone for Array","synthetic":false,"types":[]},{"text":"impl Clone for Artichoke","synthetic":false,"types":[]},{"text":"impl Clone for Kernel","synthetic":false,"types":[]},{"text":"impl Clone for Comparable","synthetic":false,"types":[]},{"text":"impl Clone for Enumerable","synthetic":false,"types":[]},{"text":"impl Clone for Enumerator","synthetic":false,"types":[]},{"text":"impl Clone for Float","synthetic":false,"types":[]},{"text":"impl Clone for Hash","synthetic":false,"types":[]},{"text":"impl Clone for Integer","synthetic":false,"types":[]},{"text":"impl Clone for Radix","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for IntegerString&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Utf8Error","synthetic":false,"types":[]},{"text":"impl Clone for RelativePath","synthetic":false,"types":[]},{"text":"impl Clone for Kernel","synthetic":false,"types":[]},{"text":"impl Clone for Region","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Capture&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for CaptureExtract&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for CaptureAt&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for CaptureMatch","synthetic":false,"types":[]},{"text":"impl Clone for MatchData","synthetic":false,"types":[]},{"text":"impl Clone for Method","synthetic":false,"types":[]},{"text":"impl Clone for Module","synthetic":false,"types":[]},{"text":"impl Clone for Numeric","synthetic":false,"types":[]},{"text":"impl Clone for Outcome","synthetic":false,"types":[]},{"text":"impl Clone for Coercion","synthetic":false,"types":[]},{"text":"impl Clone for Object","synthetic":false,"types":[]},{"text":"impl Clone for Proc","synthetic":false,"types":[]},{"text":"impl Clone for Seed","synthetic":false,"types":[]},{"text":"impl Clone for Random","synthetic":false,"types":[]},{"text":"impl Clone for Range","synthetic":false,"types":[]},{"text":"impl Clone for Lazy","synthetic":false,"types":[]},{"text":"impl Clone for Onig","synthetic":false,"types":[]},{"text":"impl Clone for Utf8","synthetic":false,"types":[]},{"text":"impl Clone for Scan","synthetic":false,"types":[]},{"text":"impl Clone for Box&lt;dyn RegexpType&gt;","synthetic":false,"types":[]},{"text":"impl Clone for InvalidEncodingError","synthetic":false,"types":[]},{"text":"impl Clone for Encoding","synthetic":false,"types":[]},{"text":"impl Clone for RegexpOption","synthetic":false,"types":[]},{"text":"impl Clone for Options","synthetic":false,"types":[]},{"text":"impl Clone for Pattern","synthetic":false,"types":[]},{"text":"impl Clone for Regexp","synthetic":false,"types":[]},{"text":"impl Clone for Config","synthetic":false,"types":[]},{"text":"impl Clone for String","synthetic":false,"types":[]},{"text":"impl Clone for Thread","synthetic":false,"types":[]},{"text":"impl Clone for Mutex","synthetic":false,"types":[]},{"text":"impl Clone for Warning","synthetic":false,"types":[]},{"text":"impl Clone for Abbrev","synthetic":false,"types":[]},{"text":"impl Clone for Base64","synthetic":false,"types":[]},{"text":"impl Clone for CMath","synthetic":false,"types":[]},{"text":"impl Clone for Delegator","synthetic":false,"types":[]},{"text":"impl Clone for SimpleDelegator","synthetic":false,"types":[]},{"text":"impl Clone for Forwardable","synthetic":false,"types":[]},{"text":"impl Clone for Json","synthetic":false,"types":[]},{"text":"impl Clone for Monitor","synthetic":false,"types":[]},{"text":"impl Clone for OpenStruct","synthetic":false,"types":[]},{"text":"impl Clone for Set","synthetic":false,"types":[]},{"text":"impl Clone for SortedSet","synthetic":false,"types":[]},{"text":"impl Clone for Shellwords","synthetic":false,"types":[]},{"text":"impl Clone for StringScanner","synthetic":false,"types":[]},{"text":"impl Clone for IpSocket","synthetic":false,"types":[]},{"text":"impl Clone for IpAddr","synthetic":false,"types":[]},{"text":"impl Clone for Uri","synthetic":false,"types":[]},{"text":"impl Clone for InterpreterExtractError","synthetic":false,"types":[]},{"text":"impl Clone for ConvertBytesError","synthetic":false,"types":[]},{"text":"impl Clone for Extension","synthetic":false,"types":[]},{"text":"impl Clone for Code","synthetic":false,"types":[]},{"text":"impl Clone for ArenaSavepointError","synthetic":false,"types":[]},{"text":"impl Clone for State","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for Spec","synthetic":false,"types":[]},{"text":"impl Clone for Rclass","synthetic":false,"types":[]},{"text":"impl Clone for Spec","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for ReleaseMetadata&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Process","synthetic":false,"types":[]},{"text":"impl Clone for Captured","synthetic":false,"types":[]},{"text":"impl Clone for Null","synthetic":false,"types":[]},{"text":"impl Clone for Context","synthetic":false,"types":[]},{"text":"impl Clone for State","synthetic":false,"types":[]},{"text":"impl Clone for WriteError","synthetic":false,"types":[]},{"text":"impl&lt;Storage:&nbsp;Clone, Align:&nbsp;Clone&gt; Clone for __BindgenBitfieldUnit&lt;Storage, Align&gt;","synthetic":false,"types":[]},{"text":"impl Clone for mrb_vtype","synthetic":false,"types":[]},{"text":"impl Clone for RBasic","synthetic":false,"types":[]},{"text":"impl Clone for RObject","synthetic":false,"types":[]},{"text":"impl Clone for RFiber","synthetic":false,"types":[]},{"text":"impl Clone for mrb_value_union","synthetic":false,"types":[]},{"text":"impl Clone for mrb_value","synthetic":false,"types":[]},{"text":"impl Clone for mrb_gc","synthetic":false,"types":[]},{"text":"impl Clone for mrb_callinfo","synthetic":false,"types":[]},{"text":"impl Clone for mrb_context","synthetic":false,"types":[]},{"text":"impl Clone for mrb_state","synthetic":false,"types":[]},{"text":"impl Clone for mrb_kwargs","synthetic":false,"types":[]},{"text":"impl Clone for mrb_pool","synthetic":false,"types":[]},{"text":"impl Clone for mrb_shared_array","synthetic":false,"types":[]},{"text":"impl Clone for RArray","synthetic":false,"types":[]},{"text":"impl Clone for RArray__bindgen_ty_1","synthetic":false,"types":[]},{"text":"impl Clone for RArray__bindgen_ty_1__bindgen_ty_1","synthetic":false,"types":[]},{"text":"impl Clone for RArray__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1","synthetic":false,"types":[]},{"text":"impl Clone for RClass","synthetic":false,"types":[]},{"text":"impl Clone for mrbc_context","synthetic":false,"types":[]},{"text":"impl Clone for mrb_ast_node","synthetic":false,"types":[]},{"text":"impl Clone for mrb_lex_state_enum","synthetic":false,"types":[]},{"text":"impl Clone for mrb_parser_message","synthetic":false,"types":[]},{"text":"impl Clone for mrb_parser_heredoc_info","synthetic":false,"types":[]},{"text":"impl Clone for mrb_parser_state","synthetic":false,"types":[]},{"text":"impl Clone for mrb_data_type","synthetic":false,"types":[]},{"text":"impl Clone for RData","synthetic":false,"types":[]},{"text":"impl Clone for mrb_locals","synthetic":false,"types":[]},{"text":"impl Clone for mrb_irep","synthetic":false,"types":[]},{"text":"impl Clone for mrb_insn_data","synthetic":false,"types":[]},{"text":"impl Clone for RHash","synthetic":false,"types":[]},{"text":"impl Clone for REnv","synthetic":false,"types":[]},{"text":"impl Clone for RProc","synthetic":false,"types":[]},{"text":"impl Clone for RProc__bindgen_ty_1","synthetic":false,"types":[]},{"text":"impl Clone for RProc__bindgen_ty_2","synthetic":false,"types":[]},{"text":"impl Clone for kh_mt","synthetic":false,"types":[]},{"text":"impl Clone for mrb_range_edges","synthetic":false,"types":[]},{"text":"impl Clone for RRange","synthetic":false,"types":[]},{"text":"impl Clone for mrb_range_beg_len","synthetic":false,"types":[]},{"text":"impl Clone for RString","synthetic":false,"types":[]},{"text":"impl Clone for RString__bindgen_ty_1","synthetic":false,"types":[]},{"text":"impl Clone for RString__bindgen_ty_1__bindgen_ty_1","synthetic":false,"types":[]},{"text":"impl Clone for RString__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1","synthetic":false,"types":[]},{"text":"impl Clone for __sigset_t","synthetic":false,"types":[]},{"text":"impl Clone for __jmp_buf_tag","synthetic":false,"types":[]},{"text":"impl Clone for mrb_jmpbuf","synthetic":false,"types":[]},{"text":"impl Clone for __va_list_tag","synthetic":false,"types":[]},{"text":"impl Clone for iv_tbl","synthetic":false,"types":[]},{"text":"impl Clone for symbol_name","synthetic":false,"types":[]},{"text":"impl Clone for mrb_irep_debug_info","synthetic":false,"types":[]},{"text":"impl Clone for htable","synthetic":false,"types":[]},{"text":"impl Clone for mrb_shared_string","synthetic":false,"types":[]},{"text":"impl Clone for Value","synthetic":false,"types":[]},{"text":"impl Clone for ArgCountError","synthetic":false,"types":[]}];
implementors["artichoke_core"] = [{"text":"impl Clone for IncrementLinenoError","synthetic":false,"types":[]},{"text":"impl Clone for Rust","synthetic":false,"types":[]},{"text":"impl Clone for Ruby","synthetic":false,"types":[]}];
implementors["atty"] = [{"text":"impl Clone for Stream","synthetic":false,"types":[]}];
implementors["base64"] = [{"text":"impl Clone for DecodeError","synthetic":false,"types":[]},{"text":"impl Clone for CharacterSet","synthetic":false,"types":[]},{"text":"impl Clone for Config","synthetic":false,"types":[]}];
implementors["bstr"] = [{"text":"impl Clone for BString","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Finder&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for FinderReverse&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Bytes&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Chars&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for CharIndices&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Utf8Chunks&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["chrono"] = [{"text":"impl Clone for Duration","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for LocalResult&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for FixedOffset","synthetic":false,"types":[]},{"text":"impl Clone for Local","synthetic":false,"types":[]},{"text":"impl Clone for Utc","synthetic":false,"types":[]},{"text":"impl Clone for NaiveDate","synthetic":false,"types":[]},{"text":"impl Clone for NaiveDateTime","synthetic":false,"types":[]},{"text":"impl Clone for IsoWeek","synthetic":false,"types":[]},{"text":"impl Clone for NaiveTime","synthetic":false,"types":[]},{"text":"impl&lt;Tz:&nbsp;Clone + TimeZone&gt; Clone for Date&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Tz::Offset: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for SecondsFormat","synthetic":false,"types":[]},{"text":"impl&lt;Tz:&nbsp;Clone + TimeZone&gt; Clone for DateTime&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Tz::Offset: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for Pad","synthetic":false,"types":[]},{"text":"impl Clone for Numeric","synthetic":false,"types":[]},{"text":"impl Clone for InternalNumeric","synthetic":false,"types":[]},{"text":"impl Clone for Fixed","synthetic":false,"types":[]},{"text":"impl Clone for InternalFixed","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Item&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for ParseError","synthetic":false,"types":[]},{"text":"impl Clone for Parsed","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for StrftimeItems&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for RoundingError","synthetic":false,"types":[]},{"text":"impl Clone for Weekday","synthetic":false,"types":[]},{"text":"impl Clone for ParseWeekdayError","synthetic":false,"types":[]},{"text":"impl Clone for Month","synthetic":false,"types":[]},{"text":"impl Clone for ParseMonthError","synthetic":false,"types":[]}];
implementors["chrono_tz"] = [{"text":"impl Clone for Tz","synthetic":false,"types":[]}];
implementors["clap"] = [{"text":"impl Clone for AppSettings","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; Clone for App&lt;'a, 'b&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; Clone for Arg&lt;'a, 'b&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'a: 'b,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for ArgMatches&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Values&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for OsValues&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for ArgGroup&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for ArgSettings","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for SubCommand&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Shell","synthetic":false,"types":[]},{"text":"impl Clone for ErrorKind","synthetic":false,"types":[]}];
implementors["focaccia"] = [{"text":"impl Clone for CaseFold","synthetic":false,"types":[]},{"text":"impl Clone for NoSuchCaseFoldingScheme","synthetic":false,"types":[]}];
implementors["getrandom"] = [{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["intaglio"] = [{"text":"impl&lt;'a&gt; Clone for AllSymbols&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Bytestrings&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Iter&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for AllSymbols&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Strings&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Iter&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for SymbolOverflowError","synthetic":false,"types":[]},{"text":"impl Clone for Symbol","synthetic":false,"types":[]}];
implementors["itoa"] = [{"text":"impl Clone for Buffer","synthetic":false,"types":[]}];
implementors["libc"] = [{"text":"impl Clone for DIR","synthetic":false,"types":[]},{"text":"impl Clone for group","synthetic":false,"types":[]},{"text":"impl Clone for utimbuf","synthetic":false,"types":[]},{"text":"impl Clone for timeval","synthetic":false,"types":[]},{"text":"impl Clone for timespec","synthetic":false,"types":[]},{"text":"impl Clone for rlimit","synthetic":false,"types":[]},{"text":"impl Clone for rusage","synthetic":false,"types":[]},{"text":"impl Clone for ipv6_mreq","synthetic":false,"types":[]},{"text":"impl Clone for hostent","synthetic":false,"types":[]},{"text":"impl Clone for iovec","synthetic":false,"types":[]},{"text":"impl Clone for pollfd","synthetic":false,"types":[]},{"text":"impl Clone for winsize","synthetic":false,"types":[]},{"text":"impl Clone for linger","synthetic":false,"types":[]},{"text":"impl Clone for sigval","synthetic":false,"types":[]},{"text":"impl Clone for itimerval","synthetic":false,"types":[]},{"text":"impl Clone for tms","synthetic":false,"types":[]},{"text":"impl Clone for servent","synthetic":false,"types":[]},{"text":"impl Clone for protoent","synthetic":false,"types":[]},{"text":"impl Clone for FILE","synthetic":false,"types":[]},{"text":"impl Clone for fpos_t","synthetic":false,"types":[]},{"text":"impl Clone for timezone","synthetic":false,"types":[]},{"text":"impl Clone for in_addr","synthetic":false,"types":[]},{"text":"impl Clone for ip_mreq","synthetic":false,"types":[]},{"text":"impl Clone for ip_mreq_source","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_in","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_in6","synthetic":false,"types":[]},{"text":"impl Clone for addrinfo","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_ll","synthetic":false,"types":[]},{"text":"impl Clone for fd_set","synthetic":false,"types":[]},{"text":"impl Clone for tm","synthetic":false,"types":[]},{"text":"impl Clone for sched_param","synthetic":false,"types":[]},{"text":"impl Clone for Dl_info","synthetic":false,"types":[]},{"text":"impl Clone for lconv","synthetic":false,"types":[]},{"text":"impl Clone for in_pktinfo","synthetic":false,"types":[]},{"text":"impl Clone for ifaddrs","synthetic":false,"types":[]},{"text":"impl Clone for in6_rtmsg","synthetic":false,"types":[]},{"text":"impl Clone for arpreq","synthetic":false,"types":[]},{"text":"impl Clone for arpreq_old","synthetic":false,"types":[]},{"text":"impl Clone for arphdr","synthetic":false,"types":[]},{"text":"impl Clone for mmsghdr","synthetic":false,"types":[]},{"text":"impl Clone for epoll_event","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_un","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_storage","synthetic":false,"types":[]},{"text":"impl Clone for utsname","synthetic":false,"types":[]},{"text":"impl Clone for sigevent","synthetic":false,"types":[]},{"text":"impl Clone for fpos64_t","synthetic":false,"types":[]},{"text":"impl Clone for rlimit64","synthetic":false,"types":[]},{"text":"impl Clone for glob_t","synthetic":false,"types":[]},{"text":"impl Clone for passwd","synthetic":false,"types":[]},{"text":"impl Clone for spwd","synthetic":false,"types":[]},{"text":"impl Clone for dqblk","synthetic":false,"types":[]},{"text":"impl Clone for signalfd_siginfo","synthetic":false,"types":[]},{"text":"impl Clone for itimerspec","synthetic":false,"types":[]},{"text":"impl Clone for fsid_t","synthetic":false,"types":[]},{"text":"impl Clone for packet_mreq","synthetic":false,"types":[]},{"text":"impl Clone for cpu_set_t","synthetic":false,"types":[]},{"text":"impl Clone for if_nameindex","synthetic":false,"types":[]},{"text":"impl Clone for msginfo","synthetic":false,"types":[]},{"text":"impl Clone for sembuf","synthetic":false,"types":[]},{"text":"impl Clone for input_event","synthetic":false,"types":[]},{"text":"impl Clone for input_id","synthetic":false,"types":[]},{"text":"impl Clone for input_absinfo","synthetic":false,"types":[]},{"text":"impl Clone for input_keymap_entry","synthetic":false,"types":[]},{"text":"impl Clone for input_mask","synthetic":false,"types":[]},{"text":"impl Clone for ff_replay","synthetic":false,"types":[]},{"text":"impl Clone for ff_trigger","synthetic":false,"types":[]},{"text":"impl Clone for ff_envelope","synthetic":false,"types":[]},{"text":"impl Clone for ff_constant_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_ramp_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_condition_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_periodic_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_rumble_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_effect","synthetic":false,"types":[]},{"text":"impl Clone for dl_phdr_info","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Ehdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Ehdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Sym","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Sym","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Phdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Phdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Shdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Shdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Chdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Chdr","synthetic":false,"types":[]},{"text":"impl Clone for ucred","synthetic":false,"types":[]},{"text":"impl Clone for mntent","synthetic":false,"types":[]},{"text":"impl Clone for posix_spawn_file_actions_t","synthetic":false,"types":[]},{"text":"impl Clone for posix_spawnattr_t","synthetic":false,"types":[]},{"text":"impl Clone for genlmsghdr","synthetic":false,"types":[]},{"text":"impl Clone for in6_pktinfo","synthetic":false,"types":[]},{"text":"impl Clone for arpd_request","synthetic":false,"types":[]},{"text":"impl Clone for inotify_event","synthetic":false,"types":[]},{"text":"impl Clone for fanotify_response","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_vm","synthetic":false,"types":[]},{"text":"impl Clone for regmatch_t","synthetic":false,"types":[]},{"text":"impl Clone for sock_extended_err","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_nl","synthetic":false,"types":[]},{"text":"impl Clone for dirent","synthetic":false,"types":[]},{"text":"impl Clone for dirent64","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_alg","synthetic":false,"types":[]},{"text":"impl Clone for af_alg_iv","synthetic":false,"types":[]},{"text":"impl Clone for mq_attr","synthetic":false,"types":[]},{"text":"impl Clone for statx","synthetic":false,"types":[]},{"text":"impl Clone for statx_timestamp","synthetic":false,"types":[]},{"text":"impl Clone for aiocb","synthetic":false,"types":[]},{"text":"impl Clone for __exit_status","synthetic":false,"types":[]},{"text":"impl Clone for __timeval","synthetic":false,"types":[]},{"text":"impl Clone for glob64_t","synthetic":false,"types":[]},{"text":"impl Clone for msghdr","synthetic":false,"types":[]},{"text":"impl Clone for cmsghdr","synthetic":false,"types":[]},{"text":"impl Clone for termios","synthetic":false,"types":[]},{"text":"impl Clone for mallinfo","synthetic":false,"types":[]},{"text":"impl Clone for nlmsghdr","synthetic":false,"types":[]},{"text":"impl Clone for nlmsgerr","synthetic":false,"types":[]},{"text":"impl Clone for nl_pktinfo","synthetic":false,"types":[]},{"text":"impl Clone for nl_mmap_req","synthetic":false,"types":[]},{"text":"impl Clone for nl_mmap_hdr","synthetic":false,"types":[]},{"text":"impl Clone for nlattr","synthetic":false,"types":[]},{"text":"impl Clone for rtentry","synthetic":false,"types":[]},{"text":"impl Clone for timex","synthetic":false,"types":[]},{"text":"impl Clone for ntptimeval","synthetic":false,"types":[]},{"text":"impl Clone for regex_t","synthetic":false,"types":[]},{"text":"impl Clone for utmpx","synthetic":false,"types":[]},{"text":"impl Clone for sigset_t","synthetic":false,"types":[]},{"text":"impl Clone for sysinfo","synthetic":false,"types":[]},{"text":"impl Clone for msqid_ds","synthetic":false,"types":[]},{"text":"impl Clone for sigaction","synthetic":false,"types":[]},{"text":"impl Clone for statfs","synthetic":false,"types":[]},{"text":"impl Clone for flock","synthetic":false,"types":[]},{"text":"impl Clone for flock64","synthetic":false,"types":[]},{"text":"impl Clone for siginfo_t","synthetic":false,"types":[]},{"text":"impl Clone for stack_t","synthetic":false,"types":[]},{"text":"impl Clone for stat","synthetic":false,"types":[]},{"text":"impl Clone for stat64","synthetic":false,"types":[]},{"text":"impl Clone for statfs64","synthetic":false,"types":[]},{"text":"impl Clone for statvfs64","synthetic":false,"types":[]},{"text":"impl Clone for pthread_attr_t","synthetic":false,"types":[]},{"text":"impl Clone for _libc_fpxreg","synthetic":false,"types":[]},{"text":"impl Clone for _libc_xmmreg","synthetic":false,"types":[]},{"text":"impl Clone for _libc_fpstate","synthetic":false,"types":[]},{"text":"impl Clone for user_regs_struct","synthetic":false,"types":[]},{"text":"impl Clone for user","synthetic":false,"types":[]},{"text":"impl Clone for mcontext_t","synthetic":false,"types":[]},{"text":"impl Clone for ipc_perm","synthetic":false,"types":[]},{"text":"impl Clone for shmid_ds","synthetic":false,"types":[]},{"text":"impl Clone for termios2","synthetic":false,"types":[]},{"text":"impl Clone for ip_mreqn","synthetic":false,"types":[]},{"text":"impl Clone for user_fpregs_struct","synthetic":false,"types":[]},{"text":"impl Clone for ucontext_t","synthetic":false,"types":[]},{"text":"impl Clone for statvfs","synthetic":false,"types":[]},{"text":"impl Clone for max_align_t","synthetic":false,"types":[]},{"text":"impl Clone for sem_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_mutexattr_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_rwlockattr_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_condattr_t","synthetic":false,"types":[]},{"text":"impl Clone for fanotify_event_metadata","synthetic":false,"types":[]},{"text":"impl Clone for pthread_cond_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_mutex_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_rwlock_t","synthetic":false,"types":[]},{"text":"impl Clone for in6_addr","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl Clone for Level","synthetic":false,"types":[]},{"text":"impl Clone for LevelFilter","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Record&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Metadata&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["nix"] = [{"text":"impl Clone for Dir","synthetic":false,"types":[]},{"text":"impl Clone for Entry","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for Errno","synthetic":false,"types":[]},{"text":"impl Clone for AtFlags","synthetic":false,"types":[]},{"text":"impl Clone for OFlag","synthetic":false,"types":[]},{"text":"impl Clone for SealFlag","synthetic":false,"types":[]},{"text":"impl Clone for FdFlag","synthetic":false,"types":[]},{"text":"impl Clone for FlockArg","synthetic":false,"types":[]},{"text":"impl Clone for SpliceFFlags","synthetic":false,"types":[]},{"text":"impl Clone for FallocateFlags","synthetic":false,"types":[]},{"text":"impl Clone for PosixFadviseAdvice","synthetic":false,"types":[]},{"text":"impl Clone for InterfaceAddress","synthetic":false,"types":[]},{"text":"impl Clone for ModuleInitFlags","synthetic":false,"types":[]},{"text":"impl Clone for DeleteModuleFlags","synthetic":false,"types":[]},{"text":"impl Clone for MsFlags","synthetic":false,"types":[]},{"text":"impl Clone for MntFlags","synthetic":false,"types":[]},{"text":"impl Clone for MQ_OFlag","synthetic":false,"types":[]},{"text":"impl Clone for FdFlag","synthetic":false,"types":[]},{"text":"impl Clone for MqAttr","synthetic":false,"types":[]},{"text":"impl Clone for InterfaceFlags","synthetic":false,"types":[]},{"text":"impl Clone for PollFd","synthetic":false,"types":[]},{"text":"impl Clone for PollFlags","synthetic":false,"types":[]},{"text":"impl Clone for OpenptyResult","synthetic":false,"types":[]},{"text":"impl Clone for ForkptyResult","synthetic":false,"types":[]},{"text":"impl Clone for PtyMaster","synthetic":false,"types":[]},{"text":"impl Clone for CloneFlags","synthetic":false,"types":[]},{"text":"impl Clone for CpuSet","synthetic":false,"types":[]},{"text":"impl Clone for AioFsyncMode","synthetic":false,"types":[]},{"text":"impl Clone for LioOpcode","synthetic":false,"types":[]},{"text":"impl Clone for LioMode","synthetic":false,"types":[]},{"text":"impl Clone for AioCancelStat","synthetic":false,"types":[]},{"text":"impl Clone for EpollFlags","synthetic":false,"types":[]},{"text":"impl Clone for EpollOp","synthetic":false,"types":[]},{"text":"impl Clone for EpollCreateFlags","synthetic":false,"types":[]},{"text":"impl Clone for EpollEvent","synthetic":false,"types":[]},{"text":"impl Clone for EfdFlags","synthetic":false,"types":[]},{"text":"impl Clone for MemFdCreateFlag","synthetic":false,"types":[]},{"text":"impl Clone for ProtFlags","synthetic":false,"types":[]},{"text":"impl Clone for MapFlags","synthetic":false,"types":[]},{"text":"impl Clone for MmapAdvise","synthetic":false,"types":[]},{"text":"impl Clone for MsFlags","synthetic":false,"types":[]},{"text":"impl Clone for MlockAllFlags","synthetic":false,"types":[]},{"text":"impl Clone for Request","synthetic":false,"types":[]},{"text":"impl Clone for Event","synthetic":false,"types":[]},{"text":"impl Clone for Options","synthetic":false,"types":[]},{"text":"impl Clone for QuotaType","synthetic":false,"types":[]},{"text":"impl Clone for QuotaFmt","synthetic":false,"types":[]},{"text":"impl Clone for QuotaValidFlags","synthetic":false,"types":[]},{"text":"impl Clone for Dqblk","synthetic":false,"types":[]},{"text":"impl Clone for RebootMode","synthetic":false,"types":[]},{"text":"impl Clone for FdSet","synthetic":false,"types":[]},{"text":"impl Clone for Signal","synthetic":false,"types":[]},{"text":"impl Clone for SignalIterator","synthetic":false,"types":[]},{"text":"impl Clone for SaFlags","synthetic":false,"types":[]},{"text":"impl Clone for SigmaskHow","synthetic":false,"types":[]},{"text":"impl Clone for SigSet","synthetic":false,"types":[]},{"text":"impl Clone for SigHandler","synthetic":false,"types":[]},{"text":"impl Clone for SigAction","synthetic":false,"types":[]},{"text":"impl Clone for SigevNotify","synthetic":false,"types":[]},{"text":"impl Clone for SigEvent","synthetic":false,"types":[]},{"text":"impl Clone for SfdFlags","synthetic":false,"types":[]},{"text":"impl Clone for SignalFd","synthetic":false,"types":[]},{"text":"impl Clone for AddressFamily","synthetic":false,"types":[]},{"text":"impl Clone for InetAddr","synthetic":false,"types":[]},{"text":"impl Clone for IpAddr","synthetic":false,"types":[]},{"text":"impl Clone for Ipv4Addr","synthetic":false,"types":[]},{"text":"impl Clone for Ipv6Addr","synthetic":false,"types":[]},{"text":"impl Clone for UnixAddr","synthetic":false,"types":[]},{"text":"impl Clone for SockAddr","synthetic":false,"types":[]},{"text":"impl Clone for NetlinkAddr","synthetic":false,"types":[]},{"text":"impl Clone for AlgAddr","synthetic":false,"types":[]},{"text":"impl Clone for LinkAddr","synthetic":false,"types":[]},{"text":"impl Clone for VsockAddr","synthetic":false,"types":[]},{"text":"impl Clone for ReuseAddr","synthetic":false,"types":[]},{"text":"impl Clone for ReusePort","synthetic":false,"types":[]},{"text":"impl Clone for TcpNoDelay","synthetic":false,"types":[]},{"text":"impl Clone for Linger","synthetic":false,"types":[]},{"text":"impl Clone for IpAddMembership","synthetic":false,"types":[]},{"text":"impl Clone for IpDropMembership","synthetic":false,"types":[]},{"text":"impl Clone for Ipv6AddMembership","synthetic":false,"types":[]},{"text":"impl Clone for Ipv6DropMembership","synthetic":false,"types":[]},{"text":"impl Clone for IpMulticastTtl","synthetic":false,"types":[]},{"text":"impl Clone for IpMulticastLoop","synthetic":false,"types":[]},{"text":"impl Clone for ReceiveTimeout","synthetic":false,"types":[]},{"text":"impl Clone for SendTimeout","synthetic":false,"types":[]},{"text":"impl Clone for Broadcast","synthetic":false,"types":[]},{"text":"impl Clone for OobInline","synthetic":false,"types":[]},{"text":"impl Clone for SocketError","synthetic":false,"types":[]},{"text":"impl Clone for KeepAlive","synthetic":false,"types":[]},{"text":"impl Clone for PeerCredentials","synthetic":false,"types":[]},{"text":"impl Clone for TcpKeepIdle","synthetic":false,"types":[]},{"text":"impl Clone for RcvBuf","synthetic":false,"types":[]},{"text":"impl Clone for SndBuf","synthetic":false,"types":[]},{"text":"impl Clone for RcvBufForce","synthetic":false,"types":[]},{"text":"impl Clone for SndBufForce","synthetic":false,"types":[]},{"text":"impl Clone for SockType","synthetic":false,"types":[]},{"text":"impl Clone for AcceptConn","synthetic":false,"types":[]},{"text":"impl Clone for BindToDevice","synthetic":false,"types":[]},{"text":"impl Clone for OriginalDst","synthetic":false,"types":[]},{"text":"impl Clone for ReceiveTimestamp","synthetic":false,"types":[]},{"text":"impl Clone for IpTransparent","synthetic":false,"types":[]},{"text":"impl Clone for Mark","synthetic":false,"types":[]},{"text":"impl Clone for PassCred","synthetic":false,"types":[]},{"text":"impl Clone for TcpCongestion","synthetic":false,"types":[]},{"text":"impl Clone for Ipv4PacketInfo","synthetic":false,"types":[]},{"text":"impl Clone for Ipv6RecvPacketInfo","synthetic":false,"types":[]},{"text":"impl Clone for UdpGsoSegment","synthetic":false,"types":[]},{"text":"impl Clone for UdpGroSegment","synthetic":false,"types":[]},{"text":"impl Clone for AlgSetAeadAuthSize","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for AlgSetKey&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for SockType","synthetic":false,"types":[]},{"text":"impl Clone for SockProtocol","synthetic":false,"types":[]},{"text":"impl Clone for SockFlag","synthetic":false,"types":[]},{"text":"impl Clone for MsgFlags","synthetic":false,"types":[]},{"text":"impl Clone for UnixCredentials","synthetic":false,"types":[]},{"text":"impl Clone for IpMembershipRequest","synthetic":false,"types":[]},{"text":"impl Clone for Ipv6MembershipRequest","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for RecvMsg&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for CmsgIterator&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for ControlMessageOwned","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for ControlMessage&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for SockLevel","synthetic":false,"types":[]},{"text":"impl Clone for Shutdown","synthetic":false,"types":[]},{"text":"impl Clone for SFlag","synthetic":false,"types":[]},{"text":"impl Clone for Mode","synthetic":false,"types":[]},{"text":"impl Clone for FchmodatFlags","synthetic":false,"types":[]},{"text":"impl Clone for UtimensatFlags","synthetic":false,"types":[]},{"text":"impl Clone for Statfs","synthetic":false,"types":[]},{"text":"impl Clone for FsType","synthetic":false,"types":[]},{"text":"impl Clone for FsFlags","synthetic":false,"types":[]},{"text":"impl Clone for Statvfs","synthetic":false,"types":[]},{"text":"impl Clone for SysInfo","synthetic":false,"types":[]},{"text":"impl Clone for Termios","synthetic":false,"types":[]},{"text":"impl Clone for BaudRate","synthetic":false,"types":[]},{"text":"impl Clone for SetArg","synthetic":false,"types":[]},{"text":"impl Clone for FlushArg","synthetic":false,"types":[]},{"text":"impl Clone for FlowArg","synthetic":false,"types":[]},{"text":"impl Clone for SpecialCharacterIndices","synthetic":false,"types":[]},{"text":"impl Clone for InputFlags","synthetic":false,"types":[]},{"text":"impl Clone for OutputFlags","synthetic":false,"types":[]},{"text":"impl Clone for ControlFlags","synthetic":false,"types":[]},{"text":"impl Clone for LocalFlags","synthetic":false,"types":[]},{"text":"impl Clone for TimeSpec","synthetic":false,"types":[]},{"text":"impl Clone for TimeVal","synthetic":false,"types":[]},{"text":"impl Clone for RemoteIoVec","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for IoVec&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for UtsName","synthetic":false,"types":[]},{"text":"impl Clone for WaitPidFlag","synthetic":false,"types":[]},{"text":"impl Clone for WaitStatus","synthetic":false,"types":[]},{"text":"impl Clone for AddWatchFlags","synthetic":false,"types":[]},{"text":"impl Clone for InitFlags","synthetic":false,"types":[]},{"text":"impl Clone for Inotify","synthetic":false,"types":[]},{"text":"impl Clone for WatchDescriptor","synthetic":false,"types":[]},{"text":"impl Clone for TimerFd","synthetic":false,"types":[]},{"text":"impl Clone for ClockId","synthetic":false,"types":[]},{"text":"impl Clone for TimerFlags","synthetic":false,"types":[]},{"text":"impl Clone for TimerSetTimeFlags","synthetic":false,"types":[]},{"text":"impl Clone for Expiration","synthetic":false,"types":[]},{"text":"impl Clone for UContext","synthetic":false,"types":[]},{"text":"impl Clone for Uid","synthetic":false,"types":[]},{"text":"impl Clone for Gid","synthetic":false,"types":[]},{"text":"impl Clone for Pid","synthetic":false,"types":[]},{"text":"impl Clone for ForkResult","synthetic":false,"types":[]},{"text":"impl Clone for FchownatFlags","synthetic":false,"types":[]},{"text":"impl Clone for Whence","synthetic":false,"types":[]},{"text":"impl Clone for LinkatFlags","synthetic":false,"types":[]},{"text":"impl Clone for UnlinkatFlags","synthetic":false,"types":[]},{"text":"impl Clone for PathconfVar","synthetic":false,"types":[]},{"text":"impl Clone for SysconfVar","synthetic":false,"types":[]},{"text":"impl Clone for AccessFlags","synthetic":false,"types":[]},{"text":"impl Clone for User","synthetic":false,"types":[]},{"text":"impl Clone for Group","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for ExtendedGcd&lt;A&gt;","synthetic":false,"types":[]}];
implementors["once_cell"] = [{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for OnceCell&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for OnceCell&lt;T&gt;","synthetic":false,"types":[]}];
implementors["onig"] = [{"text":"impl Clone for RegexOptions","synthetic":false,"types":[]},{"text":"impl Clone for SearchOptions","synthetic":false,"types":[]},{"text":"impl Clone for SyntaxOperator","synthetic":false,"types":[]},{"text":"impl Clone for SyntaxBehavior","synthetic":false,"types":[]},{"text":"impl Clone for TraverseCallbackAt","synthetic":false,"types":[]},{"text":"impl Clone for MetaCharType","synthetic":false,"types":[]},{"text":"impl Clone for Region","synthetic":false,"types":[]},{"text":"impl Clone for MetaChar","synthetic":false,"types":[]},{"text":"impl Clone for Syntax","synthetic":false,"types":[]}];
implementors["onig_sys"] = [{"text":"impl Clone for OnigCaseFoldCodeItem","synthetic":false,"types":[]},{"text":"impl Clone for OnigMetaCharTableType","synthetic":false,"types":[]},{"text":"impl Clone for OnigEncodingTypeST","synthetic":false,"types":[]},{"text":"impl Clone for OnigSyntaxType","synthetic":false,"types":[]},{"text":"impl Clone for OnigCaptureTreeNodeStruct","synthetic":false,"types":[]},{"text":"impl Clone for re_registers","synthetic":false,"types":[]},{"text":"impl Clone for OnigErrorInfo","synthetic":false,"types":[]},{"text":"impl Clone for OnigRepeatRange","synthetic":false,"types":[]},{"text":"impl Clone for re_pattern_buffer","synthetic":false,"types":[]},{"text":"impl Clone for OnigRegSetStruct","synthetic":false,"types":[]},{"text":"impl Clone for OnigCompileInfo","synthetic":false,"types":[]},{"text":"impl Clone for OnigCalloutArgsStruct","synthetic":false,"types":[]},{"text":"impl Clone for OnigValue","synthetic":false,"types":[]},{"text":"impl Clone for OnigValue__bindgen_ty_1","synthetic":false,"types":[]},{"text":"impl Clone for OnigMatchParamStruct","synthetic":false,"types":[]}];
implementors["ppv_lite86"] = [{"text":"impl Clone for YesS3","synthetic":false,"types":[]},{"text":"impl Clone for NoS3","synthetic":false,"types":[]},{"text":"impl Clone for YesS4","synthetic":false,"types":[]},{"text":"impl Clone for NoS4","synthetic":false,"types":[]},{"text":"impl Clone for YesA1","synthetic":false,"types":[]},{"text":"impl Clone for NoA1","synthetic":false,"types":[]},{"text":"impl Clone for YesA2","synthetic":false,"types":[]},{"text":"impl Clone for NoA2","synthetic":false,"types":[]},{"text":"impl Clone for YesNI","synthetic":false,"types":[]},{"text":"impl Clone for NoNI","synthetic":false,"types":[]},{"text":"impl&lt;S3:&nbsp;Clone, S4:&nbsp;Clone, NI:&nbsp;Clone&gt; Clone for SseMachine&lt;S3, S4, NI&gt;","synthetic":false,"types":[]},{"text":"impl&lt;NI:&nbsp;Clone&gt; Clone for Avx2Machine&lt;NI&gt;","synthetic":false,"types":[]},{"text":"impl Clone for vec128_storage","synthetic":false,"types":[]},{"text":"impl Clone for vec256_storage","synthetic":false,"types":[]},{"text":"impl Clone for vec512_storage","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Clone for TokenStream","synthetic":false,"types":[]},{"text":"impl Clone for Span","synthetic":false,"types":[]},{"text":"impl Clone for TokenTree","synthetic":false,"types":[]},{"text":"impl Clone for Group","synthetic":false,"types":[]},{"text":"impl Clone for Delimiter","synthetic":false,"types":[]},{"text":"impl Clone for Punct","synthetic":false,"types":[]},{"text":"impl Clone for Spacing","synthetic":false,"types":[]},{"text":"impl Clone for Ident","synthetic":false,"types":[]},{"text":"impl Clone for Literal","synthetic":false,"types":[]},{"text":"impl Clone for IntoIter","synthetic":false,"types":[]}];
implementors["proc_macro_error"] = [{"text":"impl Clone for SpanRange","synthetic":false,"types":[]}];
implementors["rand"] = [{"text":"impl Clone for Bernoulli","synthetic":false,"types":[]},{"text":"impl Clone for BernoulliError","synthetic":false,"types":[]},{"text":"impl Clone for Binomial","synthetic":false,"types":[]},{"text":"impl Clone for Cauchy","synthetic":false,"types":[]},{"text":"impl Clone for Dirichlet","synthetic":false,"types":[]},{"text":"impl Clone for Exp1","synthetic":false,"types":[]},{"text":"impl Clone for Exp","synthetic":false,"types":[]},{"text":"impl Clone for Gamma","synthetic":false,"types":[]},{"text":"impl Clone for ChiSquared","synthetic":false,"types":[]},{"text":"impl Clone for FisherF","synthetic":false,"types":[]},{"text":"impl Clone for StudentT","synthetic":false,"types":[]},{"text":"impl Clone for Beta","synthetic":false,"types":[]},{"text":"impl Clone for StandardNormal","synthetic":false,"types":[]},{"text":"impl Clone for Normal","synthetic":false,"types":[]},{"text":"impl Clone for LogNormal","synthetic":false,"types":[]},{"text":"impl Clone for Pareto","synthetic":false,"types":[]},{"text":"impl Clone for Poisson","synthetic":false,"types":[]},{"text":"impl Clone for Triangular","synthetic":false,"types":[]},{"text":"impl&lt;X:&nbsp;Clone + SampleUniform&gt; Clone for Uniform&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X::Sampler: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;X:&nbsp;Clone&gt; Clone for UniformInt&lt;X&gt;","synthetic":false,"types":[]},{"text":"impl&lt;X:&nbsp;Clone&gt; Clone for UniformFloat&lt;X&gt;","synthetic":false,"types":[]},{"text":"impl Clone for UniformDuration","synthetic":false,"types":[]},{"text":"impl Clone for UnitCircle","synthetic":false,"types":[]},{"text":"impl Clone for UnitSphereSurface","synthetic":false,"types":[]},{"text":"impl Clone for Weibull","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;Weight&gt; Clone for WeightedIndex&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Uniform&lt;W&gt;: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;X:&nbsp;Clone + SampleUniform + PartialOrd&gt; Clone for WeightedIndex&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X::Sampler: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for WeightedError","synthetic":false,"types":[]},{"text":"impl Clone for OpenClosed01","synthetic":false,"types":[]},{"text":"impl Clone for Open01","synthetic":false,"types":[]},{"text":"impl Clone for Standard","synthetic":false,"types":[]},{"text":"impl&lt;R, Rsdr&gt; Clone for ReseedingRng&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: BlockRngCore + SeedableRng + Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: RngCore + Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for StepRng","synthetic":false,"types":[]},{"text":"impl Clone for StdRng","synthetic":false,"types":[]},{"text":"impl Clone for ThreadRng","synthetic":false,"types":[]},{"text":"impl Clone for IndexVec","synthetic":false,"types":[]},{"text":"impl Clone for IndexVecIntoIter","synthetic":false,"types":[]}];
implementors["rand_chacha"] = [{"text":"impl Clone for ChaCha20Core","synthetic":false,"types":[]},{"text":"impl Clone for ChaCha20Rng","synthetic":false,"types":[]},{"text":"impl Clone for ChaCha12Core","synthetic":false,"types":[]},{"text":"impl Clone for ChaCha12Rng","synthetic":false,"types":[]},{"text":"impl Clone for ChaCha8Core","synthetic":false,"types":[]},{"text":"impl Clone for ChaCha8Rng","synthetic":false,"types":[]}];
implementors["rand_core"] = [{"text":"impl&lt;R:&nbsp;Clone + BlockRngCore + ?Sized&gt; Clone for BlockRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Results: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + BlockRngCore + ?Sized&gt; Clone for BlockRng64&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Results: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for OsRng","synthetic":false,"types":[]}];
implementors["regex"] = [{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl&lt;'t&gt; Clone for Match&lt;'t&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Regex","synthetic":false,"types":[]},{"text":"impl Clone for CaptureLocations","synthetic":false,"types":[]},{"text":"impl Clone for RegexSet","synthetic":false,"types":[]},{"text":"impl Clone for SetMatches","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for SetMatchesIter&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for RegexSet","synthetic":false,"types":[]},{"text":"impl Clone for SetMatches","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for SetMatchesIter&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'t&gt; Clone for Match&lt;'t&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Regex","synthetic":false,"types":[]},{"text":"impl Clone for CaptureLocations","synthetic":false,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl Clone for ParserBuilder","synthetic":false,"types":[]},{"text":"impl Clone for Parser","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for ErrorKind","synthetic":false,"types":[]},{"text":"impl Clone for Span","synthetic":false,"types":[]},{"text":"impl Clone for Position","synthetic":false,"types":[]},{"text":"impl Clone for WithComments","synthetic":false,"types":[]},{"text":"impl Clone for Comment","synthetic":false,"types":[]},{"text":"impl Clone for Ast","synthetic":false,"types":[]},{"text":"impl Clone for Alternation","synthetic":false,"types":[]},{"text":"impl Clone for Concat","synthetic":false,"types":[]},{"text":"impl Clone for Literal","synthetic":false,"types":[]},{"text":"impl Clone for LiteralKind","synthetic":false,"types":[]},{"text":"impl Clone for SpecialLiteralKind","synthetic":false,"types":[]},{"text":"impl Clone for HexLiteralKind","synthetic":false,"types":[]},{"text":"impl Clone for Class","synthetic":false,"types":[]},{"text":"impl Clone for ClassPerl","synthetic":false,"types":[]},{"text":"impl Clone for ClassPerlKind","synthetic":false,"types":[]},{"text":"impl Clone for ClassAscii","synthetic":false,"types":[]},{"text":"impl Clone for ClassAsciiKind","synthetic":false,"types":[]},{"text":"impl Clone for ClassUnicode","synthetic":false,"types":[]},{"text":"impl Clone for ClassUnicodeKind","synthetic":false,"types":[]},{"text":"impl Clone for ClassUnicodeOpKind","synthetic":false,"types":[]},{"text":"impl Clone for ClassBracketed","synthetic":false,"types":[]},{"text":"impl Clone for ClassSet","synthetic":false,"types":[]},{"text":"impl Clone for ClassSetItem","synthetic":false,"types":[]},{"text":"impl Clone for ClassSetRange","synthetic":false,"types":[]},{"text":"impl Clone for ClassSetUnion","synthetic":false,"types":[]},{"text":"impl Clone for ClassSetBinaryOp","synthetic":false,"types":[]},{"text":"impl Clone for ClassSetBinaryOpKind","synthetic":false,"types":[]},{"text":"impl Clone for Assertion","synthetic":false,"types":[]},{"text":"impl Clone for AssertionKind","synthetic":false,"types":[]},{"text":"impl Clone for Repetition","synthetic":false,"types":[]},{"text":"impl Clone for RepetitionOp","synthetic":false,"types":[]},{"text":"impl Clone for RepetitionKind","synthetic":false,"types":[]},{"text":"impl Clone for RepetitionRange","synthetic":false,"types":[]},{"text":"impl Clone for Group","synthetic":false,"types":[]},{"text":"impl Clone for GroupKind","synthetic":false,"types":[]},{"text":"impl Clone for CaptureName","synthetic":false,"types":[]},{"text":"impl Clone for SetFlags","synthetic":false,"types":[]},{"text":"impl Clone for Flags","synthetic":false,"types":[]},{"text":"impl Clone for FlagsItem","synthetic":false,"types":[]},{"text":"impl Clone for FlagsItemKind","synthetic":false,"types":[]},{"text":"impl Clone for Flag","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Literals","synthetic":false,"types":[]},{"text":"impl Clone for Literal","synthetic":false,"types":[]},{"text":"impl Clone for TranslatorBuilder","synthetic":false,"types":[]},{"text":"impl Clone for Translator","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for ErrorKind","synthetic":false,"types":[]},{"text":"impl Clone for Hir","synthetic":false,"types":[]},{"text":"impl Clone for HirKind","synthetic":false,"types":[]},{"text":"impl Clone for Literal","synthetic":false,"types":[]},{"text":"impl Clone for Class","synthetic":false,"types":[]},{"text":"impl Clone for ClassUnicode","synthetic":false,"types":[]},{"text":"impl Clone for ClassUnicodeRange","synthetic":false,"types":[]},{"text":"impl Clone for ClassBytes","synthetic":false,"types":[]},{"text":"impl Clone for ClassBytesRange","synthetic":false,"types":[]},{"text":"impl Clone for Anchor","synthetic":false,"types":[]},{"text":"impl Clone for WordBoundary","synthetic":false,"types":[]},{"text":"impl Clone for Group","synthetic":false,"types":[]},{"text":"impl Clone for GroupKind","synthetic":false,"types":[]},{"text":"impl Clone for Repetition","synthetic":false,"types":[]},{"text":"impl Clone for RepetitionKind","synthetic":false,"types":[]},{"text":"impl Clone for RepetitionRange","synthetic":false,"types":[]},{"text":"impl Clone for ParserBuilder","synthetic":false,"types":[]},{"text":"impl Clone for Parser","synthetic":false,"types":[]},{"text":"impl Clone for Utf8Sequence","synthetic":false,"types":[]},{"text":"impl Clone for Utf8Range","synthetic":false,"types":[]}];
implementors["rustyline"] = [{"text":"impl Clone for Quote","synthetic":false,"types":[]},{"text":"impl Clone for Config","synthetic":false,"types":[]},{"text":"impl Clone for BellStyle","synthetic":false,"types":[]},{"text":"impl Clone for HistoryDuplicates","synthetic":false,"types":[]},{"text":"impl Clone for CompletionType","synthetic":false,"types":[]},{"text":"impl Clone for EditMode","synthetic":false,"types":[]},{"text":"impl Clone for ColorMode","synthetic":false,"types":[]},{"text":"impl Clone for OutputStreamType","synthetic":false,"types":[]},{"text":"impl Clone for Builder","synthetic":false,"types":[]},{"text":"impl Clone for Direction","synthetic":false,"types":[]},{"text":"impl Clone for Cmd","synthetic":false,"types":[]},{"text":"impl Clone for Word","synthetic":false,"types":[]},{"text":"impl Clone for At","synthetic":false,"types":[]},{"text":"impl Clone for Anchor","synthetic":false,"types":[]},{"text":"impl Clone for CharSearch","synthetic":false,"types":[]},{"text":"impl Clone for Movement","synthetic":false,"types":[]},{"text":"impl Clone for KeyPress","synthetic":false,"types":[]},{"text":"impl Clone for WordAction","synthetic":false,"types":[]}];
implementors["scolapasta_hex"] = [{"text":"impl&lt;'a&gt; Clone for Hex&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["scolapasta_string_escape"] = [{"text":"impl Clone for Literal","synthetic":false,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;A:&nbsp;Array&gt; Clone for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Array + Clone&gt; Clone for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["spinoso_array"] = [{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for SmallArray&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Array&lt;T&gt;","synthetic":false,"types":[]}];
implementors["spinoso_env"] = [{"text":"impl Clone for Memory","synthetic":false,"types":[]},{"text":"impl Clone for System","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for ArgumentError","synthetic":false,"types":[]},{"text":"impl Clone for InvalidError","synthetic":false,"types":[]}];
implementors["spinoso_exception"] = [{"text":"impl Clone for ArgumentError","synthetic":false,"types":[]},{"text":"impl Clone for EncodingError","synthetic":false,"types":[]},{"text":"impl Clone for EOFError","synthetic":false,"types":[]},{"text":"impl Clone for Exception","synthetic":false,"types":[]},{"text":"impl Clone for Fatal","synthetic":false,"types":[]},{"text":"impl Clone for FiberError","synthetic":false,"types":[]},{"text":"impl Clone for FloatDomainError","synthetic":false,"types":[]},{"text":"impl Clone for FrozenError","synthetic":false,"types":[]},{"text":"impl Clone for IndexError","synthetic":false,"types":[]},{"text":"impl Clone for Interrupt","synthetic":false,"types":[]},{"text":"impl Clone for IOError","synthetic":false,"types":[]},{"text":"impl Clone for KeyError","synthetic":false,"types":[]},{"text":"impl Clone for LoadError","synthetic":false,"types":[]},{"text":"impl Clone for LocalJumpError","synthetic":false,"types":[]},{"text":"impl Clone for NameError","synthetic":false,"types":[]},{"text":"impl Clone for NoMemoryError","synthetic":false,"types":[]},{"text":"impl Clone for NoMethodError","synthetic":false,"types":[]},{"text":"impl Clone for NotImplementedError","synthetic":false,"types":[]},{"text":"impl Clone for RangeError","synthetic":false,"types":[]},{"text":"impl Clone for RegexpError","synthetic":false,"types":[]},{"text":"impl Clone for RuntimeError","synthetic":false,"types":[]},{"text":"impl Clone for ScriptError","synthetic":false,"types":[]},{"text":"impl Clone for SecurityError","synthetic":false,"types":[]},{"text":"impl Clone for SignalException","synthetic":false,"types":[]},{"text":"impl Clone for StandardError","synthetic":false,"types":[]},{"text":"impl Clone for StopIteration","synthetic":false,"types":[]},{"text":"impl Clone for SyntaxError","synthetic":false,"types":[]},{"text":"impl Clone for SystemCallError","synthetic":false,"types":[]},{"text":"impl Clone for SystemExit","synthetic":false,"types":[]},{"text":"impl Clone for SystemStackError","synthetic":false,"types":[]},{"text":"impl Clone for ThreadError","synthetic":false,"types":[]},{"text":"impl Clone for TypeError","synthetic":false,"types":[]},{"text":"impl Clone for UncaughtThrowError","synthetic":false,"types":[]},{"text":"impl Clone for ZeroDivisionError","synthetic":false,"types":[]}];
implementors["spinoso_math"] = [{"text":"impl Clone for Math","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for DomainError","synthetic":false,"types":[]},{"text":"impl Clone for NotImplementedError","synthetic":false,"types":[]}];
implementors["spinoso_random"] = [{"text":"impl Clone for Max","synthetic":false,"types":[]},{"text":"impl Clone for Rand","synthetic":false,"types":[]},{"text":"impl Clone for Mt","synthetic":false,"types":[]},{"text":"impl Clone for Random","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for InitializeError","synthetic":false,"types":[]},{"text":"impl Clone for UrandomError","synthetic":false,"types":[]},{"text":"impl Clone for NewSeedError","synthetic":false,"types":[]},{"text":"impl Clone for ArgumentError","synthetic":false,"types":[]}];
implementors["spinoso_securerandom"] = [{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for ArgumentError","synthetic":false,"types":[]},{"text":"impl Clone for RandomBytesError","synthetic":false,"types":[]},{"text":"impl Clone for DomainError","synthetic":false,"types":[]},{"text":"impl Clone for SecureRandom","synthetic":false,"types":[]},{"text":"impl Clone for Max","synthetic":false,"types":[]},{"text":"impl Clone for Rand","synthetic":false,"types":[]}];
implementors["spinoso_symbol"] = [{"text":"impl Clone for AllSymbols","synthetic":false,"types":[]},{"text":"impl Clone for IdentifierType","synthetic":false,"types":[]},{"text":"impl Clone for ParseIdentifierError","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Inspect&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for SymbolOverflowError","synthetic":false,"types":[]},{"text":"impl Clone for Symbol","synthetic":false,"types":[]}];
implementors["spinoso_time"] = [{"text":"impl Clone for Offset","synthetic":false,"types":[]},{"text":"impl Clone for Time","synthetic":false,"types":[]},{"text":"impl Clone for ToA","synthetic":false,"types":[]},{"text":"impl Clone for ComponentOutOfRangeError","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Clone for Underscore","synthetic":false,"types":[]},{"text":"impl Clone for Abstract","synthetic":false,"types":[]},{"text":"impl Clone for As","synthetic":false,"types":[]},{"text":"impl Clone for Async","synthetic":false,"types":[]},{"text":"impl Clone for Auto","synthetic":false,"types":[]},{"text":"impl Clone for Await","synthetic":false,"types":[]},{"text":"impl Clone for Become","synthetic":false,"types":[]},{"text":"impl Clone for Box","synthetic":false,"types":[]},{"text":"impl Clone for Break","synthetic":false,"types":[]},{"text":"impl Clone for Const","synthetic":false,"types":[]},{"text":"impl Clone for Continue","synthetic":false,"types":[]},{"text":"impl Clone for Crate","synthetic":false,"types":[]},{"text":"impl Clone for Default","synthetic":false,"types":[]},{"text":"impl Clone for Do","synthetic":false,"types":[]},{"text":"impl Clone for Dyn","synthetic":false,"types":[]},{"text":"impl Clone for Else","synthetic":false,"types":[]},{"text":"impl Clone for Enum","synthetic":false,"types":[]},{"text":"impl Clone for Extern","synthetic":false,"types":[]},{"text":"impl Clone for Final","synthetic":false,"types":[]},{"text":"impl Clone for Fn","synthetic":false,"types":[]},{"text":"impl Clone for For","synthetic":false,"types":[]},{"text":"impl Clone for If","synthetic":false,"types":[]},{"text":"impl Clone for Impl","synthetic":false,"types":[]},{"text":"impl Clone for In","synthetic":false,"types":[]},{"text":"impl Clone for Let","synthetic":false,"types":[]},{"text":"impl Clone for Loop","synthetic":false,"types":[]},{"text":"impl Clone for Macro","synthetic":false,"types":[]},{"text":"impl Clone for Match","synthetic":false,"types":[]},{"text":"impl Clone for Mod","synthetic":false,"types":[]},{"text":"impl Clone for Move","synthetic":false,"types":[]},{"text":"impl Clone for Mut","synthetic":false,"types":[]},{"text":"impl Clone for Override","synthetic":false,"types":[]},{"text":"impl Clone for Priv","synthetic":false,"types":[]},{"text":"impl Clone for Pub","synthetic":false,"types":[]},{"text":"impl Clone for Ref","synthetic":false,"types":[]},{"text":"impl Clone for Return","synthetic":false,"types":[]},{"text":"impl Clone for SelfType","synthetic":false,"types":[]},{"text":"impl Clone for SelfValue","synthetic":false,"types":[]},{"text":"impl Clone for Static","synthetic":false,"types":[]},{"text":"impl Clone for Struct","synthetic":false,"types":[]},{"text":"impl Clone for Super","synthetic":false,"types":[]},{"text":"impl Clone for Trait","synthetic":false,"types":[]},{"text":"impl Clone for Try","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for Typeof","synthetic":false,"types":[]},{"text":"impl Clone for Union","synthetic":false,"types":[]},{"text":"impl Clone for Unsafe","synthetic":false,"types":[]},{"text":"impl Clone for Unsized","synthetic":false,"types":[]},{"text":"impl Clone for Use","synthetic":false,"types":[]},{"text":"impl Clone for Virtual","synthetic":false,"types":[]},{"text":"impl Clone for Where","synthetic":false,"types":[]},{"text":"impl Clone for While","synthetic":false,"types":[]},{"text":"impl Clone for Yield","synthetic":false,"types":[]},{"text":"impl Clone for Add","synthetic":false,"types":[]},{"text":"impl Clone for AddEq","synthetic":false,"types":[]},{"text":"impl Clone for And","synthetic":false,"types":[]},{"text":"impl Clone for AndAnd","synthetic":false,"types":[]},{"text":"impl Clone for AndEq","synthetic":false,"types":[]},{"text":"impl Clone for At","synthetic":false,"types":[]},{"text":"impl Clone for Bang","synthetic":false,"types":[]},{"text":"impl Clone for Caret","synthetic":false,"types":[]},{"text":"impl Clone for CaretEq","synthetic":false,"types":[]},{"text":"impl Clone for Colon","synthetic":false,"types":[]},{"text":"impl Clone for Colon2","synthetic":false,"types":[]},{"text":"impl Clone for Comma","synthetic":false,"types":[]},{"text":"impl Clone for Div","synthetic":false,"types":[]},{"text":"impl Clone for DivEq","synthetic":false,"types":[]},{"text":"impl Clone for Dollar","synthetic":false,"types":[]},{"text":"impl Clone for Dot","synthetic":false,"types":[]},{"text":"impl Clone for Dot2","synthetic":false,"types":[]},{"text":"impl Clone for Dot3","synthetic":false,"types":[]},{"text":"impl Clone for DotDotEq","synthetic":false,"types":[]},{"text":"impl Clone for Eq","synthetic":false,"types":[]},{"text":"impl Clone for EqEq","synthetic":false,"types":[]},{"text":"impl Clone for Ge","synthetic":false,"types":[]},{"text":"impl Clone for Gt","synthetic":false,"types":[]},{"text":"impl Clone for Le","synthetic":false,"types":[]},{"text":"impl Clone for Lt","synthetic":false,"types":[]},{"text":"impl Clone for MulEq","synthetic":false,"types":[]},{"text":"impl Clone for Ne","synthetic":false,"types":[]},{"text":"impl Clone for Or","synthetic":false,"types":[]},{"text":"impl Clone for OrEq","synthetic":false,"types":[]},{"text":"impl Clone for OrOr","synthetic":false,"types":[]},{"text":"impl Clone for Pound","synthetic":false,"types":[]},{"text":"impl Clone for Question","synthetic":false,"types":[]},{"text":"impl Clone for RArrow","synthetic":false,"types":[]},{"text":"impl Clone for LArrow","synthetic":false,"types":[]},{"text":"impl Clone for Rem","synthetic":false,"types":[]},{"text":"impl Clone for RemEq","synthetic":false,"types":[]},{"text":"impl Clone for FatArrow","synthetic":false,"types":[]},{"text":"impl Clone for Semi","synthetic":false,"types":[]},{"text":"impl Clone for Shl","synthetic":false,"types":[]},{"text":"impl Clone for ShlEq","synthetic":false,"types":[]},{"text":"impl Clone for Shr","synthetic":false,"types":[]},{"text":"impl Clone for ShrEq","synthetic":false,"types":[]},{"text":"impl Clone for Star","synthetic":false,"types":[]},{"text":"impl Clone for Sub","synthetic":false,"types":[]},{"text":"impl Clone for SubEq","synthetic":false,"types":[]},{"text":"impl Clone for Tilde","synthetic":false,"types":[]},{"text":"impl Clone for Brace","synthetic":false,"types":[]},{"text":"impl Clone for Bracket","synthetic":false,"types":[]},{"text":"impl Clone for Paren","synthetic":false,"types":[]},{"text":"impl Clone for Group","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for ImplGenerics&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for TypeGenerics&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Turbofish&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Lifetime","synthetic":false,"types":[]},{"text":"impl Clone for LitStr","synthetic":false,"types":[]},{"text":"impl Clone for LitByteStr","synthetic":false,"types":[]},{"text":"impl Clone for LitByte","synthetic":false,"types":[]},{"text":"impl Clone for LitChar","synthetic":false,"types":[]},{"text":"impl Clone for LitInt","synthetic":false,"types":[]},{"text":"impl Clone for LitFloat","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Cursor&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, P&gt; Clone for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T, P&gt; Clone for Pairs&lt;'a, T, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, P&gt; Clone for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; Clone for Iter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, P&gt; Clone for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for Abi","synthetic":false,"types":[]},{"text":"impl Clone for AngleBracketedGenericArguments","synthetic":false,"types":[]},{"text":"impl Clone for Arm","synthetic":false,"types":[]},{"text":"impl Clone for AttrStyle","synthetic":false,"types":[]},{"text":"impl Clone for Attribute","synthetic":false,"types":[]},{"text":"impl Clone for BareFnArg","synthetic":false,"types":[]},{"text":"impl Clone for BinOp","synthetic":false,"types":[]},{"text":"impl Clone for Binding","synthetic":false,"types":[]},{"text":"impl Clone for Block","synthetic":false,"types":[]},{"text":"impl Clone for BoundLifetimes","synthetic":false,"types":[]},{"text":"impl Clone for ConstParam","synthetic":false,"types":[]},{"text":"impl Clone for Constraint","synthetic":false,"types":[]},{"text":"impl Clone for Data","synthetic":false,"types":[]},{"text":"impl Clone for DataEnum","synthetic":false,"types":[]},{"text":"impl Clone for DataStruct","synthetic":false,"types":[]},{"text":"impl Clone for DataUnion","synthetic":false,"types":[]},{"text":"impl Clone for DeriveInput","synthetic":false,"types":[]},{"text":"impl Clone for Expr","synthetic":false,"types":[]},{"text":"impl Clone for ExprArray","synthetic":false,"types":[]},{"text":"impl Clone for ExprAssign","synthetic":false,"types":[]},{"text":"impl Clone for ExprAssignOp","synthetic":false,"types":[]},{"text":"impl Clone for ExprAsync","synthetic":false,"types":[]},{"text":"impl Clone for ExprAwait","synthetic":false,"types":[]},{"text":"impl Clone for ExprBinary","synthetic":false,"types":[]},{"text":"impl Clone for ExprBlock","synthetic":false,"types":[]},{"text":"impl Clone for ExprBox","synthetic":false,"types":[]},{"text":"impl Clone for ExprBreak","synthetic":false,"types":[]},{"text":"impl Clone for ExprCall","synthetic":false,"types":[]},{"text":"impl Clone for ExprCast","synthetic":false,"types":[]},{"text":"impl Clone for ExprClosure","synthetic":false,"types":[]},{"text":"impl Clone for ExprContinue","synthetic":false,"types":[]},{"text":"impl Clone for ExprField","synthetic":false,"types":[]},{"text":"impl Clone for ExprForLoop","synthetic":false,"types":[]},{"text":"impl Clone for ExprGroup","synthetic":false,"types":[]},{"text":"impl Clone for ExprIf","synthetic":false,"types":[]},{"text":"impl Clone for ExprIndex","synthetic":false,"types":[]},{"text":"impl Clone for ExprLet","synthetic":false,"types":[]},{"text":"impl Clone for ExprLit","synthetic":false,"types":[]},{"text":"impl Clone for ExprLoop","synthetic":false,"types":[]},{"text":"impl Clone for ExprMacro","synthetic":false,"types":[]},{"text":"impl Clone for ExprMatch","synthetic":false,"types":[]},{"text":"impl Clone for ExprMethodCall","synthetic":false,"types":[]},{"text":"impl Clone for ExprParen","synthetic":false,"types":[]},{"text":"impl Clone for ExprPath","synthetic":false,"types":[]},{"text":"impl Clone for ExprRange","synthetic":false,"types":[]},{"text":"impl Clone for ExprReference","synthetic":false,"types":[]},{"text":"impl Clone for ExprRepeat","synthetic":false,"types":[]},{"text":"impl Clone for ExprReturn","synthetic":false,"types":[]},{"text":"impl Clone for ExprStruct","synthetic":false,"types":[]},{"text":"impl Clone for ExprTry","synthetic":false,"types":[]},{"text":"impl Clone for ExprTryBlock","synthetic":false,"types":[]},{"text":"impl Clone for ExprTuple","synthetic":false,"types":[]},{"text":"impl Clone for ExprType","synthetic":false,"types":[]},{"text":"impl Clone for ExprUnary","synthetic":false,"types":[]},{"text":"impl Clone for ExprUnsafe","synthetic":false,"types":[]},{"text":"impl Clone for ExprWhile","synthetic":false,"types":[]},{"text":"impl Clone for ExprYield","synthetic":false,"types":[]},{"text":"impl Clone for Field","synthetic":false,"types":[]},{"text":"impl Clone for FieldPat","synthetic":false,"types":[]},{"text":"impl Clone for FieldValue","synthetic":false,"types":[]},{"text":"impl Clone for Fields","synthetic":false,"types":[]},{"text":"impl Clone for FieldsNamed","synthetic":false,"types":[]},{"text":"impl Clone for FieldsUnnamed","synthetic":false,"types":[]},{"text":"impl Clone for File","synthetic":false,"types":[]},{"text":"impl Clone for FnArg","synthetic":false,"types":[]},{"text":"impl Clone for ForeignItem","synthetic":false,"types":[]},{"text":"impl Clone for ForeignItemFn","synthetic":false,"types":[]},{"text":"impl Clone for ForeignItemMacro","synthetic":false,"types":[]},{"text":"impl Clone for ForeignItemStatic","synthetic":false,"types":[]},{"text":"impl Clone for ForeignItemType","synthetic":false,"types":[]},{"text":"impl Clone for GenericArgument","synthetic":false,"types":[]},{"text":"impl Clone for GenericMethodArgument","synthetic":false,"types":[]},{"text":"impl Clone for GenericParam","synthetic":false,"types":[]},{"text":"impl Clone for Generics","synthetic":false,"types":[]},{"text":"impl Clone for ImplItem","synthetic":false,"types":[]},{"text":"impl Clone for ImplItemConst","synthetic":false,"types":[]},{"text":"impl Clone for ImplItemMacro","synthetic":false,"types":[]},{"text":"impl Clone for ImplItemMethod","synthetic":false,"types":[]},{"text":"impl Clone for ImplItemType","synthetic":false,"types":[]},{"text":"impl Clone for Index","synthetic":false,"types":[]},{"text":"impl Clone for Item","synthetic":false,"types":[]},{"text":"impl Clone for ItemConst","synthetic":false,"types":[]},{"text":"impl Clone for ItemEnum","synthetic":false,"types":[]},{"text":"impl Clone for ItemExternCrate","synthetic":false,"types":[]},{"text":"impl Clone for ItemFn","synthetic":false,"types":[]},{"text":"impl Clone for ItemForeignMod","synthetic":false,"types":[]},{"text":"impl Clone for ItemImpl","synthetic":false,"types":[]},{"text":"impl Clone for ItemMacro","synthetic":false,"types":[]},{"text":"impl Clone for ItemMacro2","synthetic":false,"types":[]},{"text":"impl Clone for ItemMod","synthetic":false,"types":[]},{"text":"impl Clone for ItemStatic","synthetic":false,"types":[]},{"text":"impl Clone for ItemStruct","synthetic":false,"types":[]},{"text":"impl Clone for ItemTrait","synthetic":false,"types":[]},{"text":"impl Clone for ItemTraitAlias","synthetic":false,"types":[]},{"text":"impl Clone for ItemType","synthetic":false,"types":[]},{"text":"impl Clone for ItemUnion","synthetic":false,"types":[]},{"text":"impl Clone for ItemUse","synthetic":false,"types":[]},{"text":"impl Clone for Label","synthetic":false,"types":[]},{"text":"impl Clone for LifetimeDef","synthetic":false,"types":[]},{"text":"impl Clone for Lit","synthetic":false,"types":[]},{"text":"impl Clone for LitBool","synthetic":false,"types":[]},{"text":"impl Clone for Local","synthetic":false,"types":[]},{"text":"impl Clone for Macro","synthetic":false,"types":[]},{"text":"impl Clone for MacroDelimiter","synthetic":false,"types":[]},{"text":"impl Clone for Member","synthetic":false,"types":[]},{"text":"impl Clone for Meta","synthetic":false,"types":[]},{"text":"impl Clone for MetaList","synthetic":false,"types":[]},{"text":"impl Clone for MetaNameValue","synthetic":false,"types":[]},{"text":"impl Clone for MethodTurbofish","synthetic":false,"types":[]},{"text":"impl Clone for NestedMeta","synthetic":false,"types":[]},{"text":"impl Clone for ParenthesizedGenericArguments","synthetic":false,"types":[]},{"text":"impl Clone for Pat","synthetic":false,"types":[]},{"text":"impl Clone for PatBox","synthetic":false,"types":[]},{"text":"impl Clone for PatIdent","synthetic":false,"types":[]},{"text":"impl Clone for PatLit","synthetic":false,"types":[]},{"text":"impl Clone for PatMacro","synthetic":false,"types":[]},{"text":"impl Clone for PatOr","synthetic":false,"types":[]},{"text":"impl Clone for PatPath","synthetic":false,"types":[]},{"text":"impl Clone for PatRange","synthetic":false,"types":[]},{"text":"impl Clone for PatReference","synthetic":false,"types":[]},{"text":"impl Clone for PatRest","synthetic":false,"types":[]},{"text":"impl Clone for PatSlice","synthetic":false,"types":[]},{"text":"impl Clone for PatStruct","synthetic":false,"types":[]},{"text":"impl Clone for PatTuple","synthetic":false,"types":[]},{"text":"impl Clone for PatTupleStruct","synthetic":false,"types":[]},{"text":"impl Clone for PatType","synthetic":false,"types":[]},{"text":"impl Clone for PatWild","synthetic":false,"types":[]},{"text":"impl Clone for Path","synthetic":false,"types":[]},{"text":"impl Clone for PathArguments","synthetic":false,"types":[]},{"text":"impl Clone for PathSegment","synthetic":false,"types":[]},{"text":"impl Clone for PredicateEq","synthetic":false,"types":[]},{"text":"impl Clone for PredicateLifetime","synthetic":false,"types":[]},{"text":"impl Clone for PredicateType","synthetic":false,"types":[]},{"text":"impl Clone for QSelf","synthetic":false,"types":[]},{"text":"impl Clone for RangeLimits","synthetic":false,"types":[]},{"text":"impl Clone for Receiver","synthetic":false,"types":[]},{"text":"impl Clone for ReturnType","synthetic":false,"types":[]},{"text":"impl Clone for Signature","synthetic":false,"types":[]},{"text":"impl Clone for Stmt","synthetic":false,"types":[]},{"text":"impl Clone for TraitBound","synthetic":false,"types":[]},{"text":"impl Clone for TraitBoundModifier","synthetic":false,"types":[]},{"text":"impl Clone for TraitItem","synthetic":false,"types":[]},{"text":"impl Clone for TraitItemConst","synthetic":false,"types":[]},{"text":"impl Clone for TraitItemMacro","synthetic":false,"types":[]},{"text":"impl Clone for TraitItemMethod","synthetic":false,"types":[]},{"text":"impl Clone for TraitItemType","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for TypeArray","synthetic":false,"types":[]},{"text":"impl Clone for TypeBareFn","synthetic":false,"types":[]},{"text":"impl Clone for TypeGroup","synthetic":false,"types":[]},{"text":"impl Clone for TypeImplTrait","synthetic":false,"types":[]},{"text":"impl Clone for TypeInfer","synthetic":false,"types":[]},{"text":"impl Clone for TypeMacro","synthetic":false,"types":[]},{"text":"impl Clone for TypeNever","synthetic":false,"types":[]},{"text":"impl Clone for TypeParam","synthetic":false,"types":[]},{"text":"impl Clone for TypeParamBound","synthetic":false,"types":[]},{"text":"impl Clone for TypeParen","synthetic":false,"types":[]},{"text":"impl Clone for TypePath","synthetic":false,"types":[]},{"text":"impl Clone for TypePtr","synthetic":false,"types":[]},{"text":"impl Clone for TypeReference","synthetic":false,"types":[]},{"text":"impl Clone for TypeSlice","synthetic":false,"types":[]},{"text":"impl Clone for TypeTraitObject","synthetic":false,"types":[]},{"text":"impl Clone for TypeTuple","synthetic":false,"types":[]},{"text":"impl Clone for UnOp","synthetic":false,"types":[]},{"text":"impl Clone for UseGlob","synthetic":false,"types":[]},{"text":"impl Clone for UseGroup","synthetic":false,"types":[]},{"text":"impl Clone for UseName","synthetic":false,"types":[]},{"text":"impl Clone for UsePath","synthetic":false,"types":[]},{"text":"impl Clone for UseRename","synthetic":false,"types":[]},{"text":"impl Clone for UseTree","synthetic":false,"types":[]},{"text":"impl Clone for Variadic","synthetic":false,"types":[]},{"text":"impl Clone for Variant","synthetic":false,"types":[]},{"text":"impl Clone for VisCrate","synthetic":false,"types":[]},{"text":"impl Clone for VisPublic","synthetic":false,"types":[]},{"text":"impl Clone for VisRestricted","synthetic":false,"types":[]},{"text":"impl Clone for Visibility","synthetic":false,"types":[]},{"text":"impl Clone for WhereClause","synthetic":false,"types":[]},{"text":"impl Clone for WherePredicate","synthetic":false,"types":[]},{"text":"impl&lt;'c, 'a&gt; Clone for StepCursor&lt;'c, 'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["termcolor"] = [{"text":"impl Clone for ColorChoice","synthetic":false,"types":[]},{"text":"impl Clone for ColorSpec","synthetic":false,"types":[]},{"text":"impl Clone for Color","synthetic":false,"types":[]},{"text":"impl Clone for ParseColorError","synthetic":false,"types":[]}];
implementors["textwrap"] = [{"text":"impl Clone for NoHyphenation","synthetic":false,"types":[]},{"text":"impl Clone for HyphenSplitter","synthetic":false,"types":[]},{"text":"impl&lt;'a, S:&nbsp;Clone + WordSplitter&gt; Clone for Wrapper&lt;'a, S&gt;","synthetic":false,"types":[]}];
implementors["unicode_segmentation"] = [{"text":"impl&lt;'a&gt; Clone for GraphemeIndices&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Graphemes&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for GraphemeCursor","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for UWordBounds&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for UWordBoundIndices&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for UnicodeSentences&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for USentenceBounds&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for USentenceBoundIndices&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["uuid"] = [{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Hyphenated","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for HyphenatedRef&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Simple","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for SimpleRef&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Urn","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for UrnRef&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Version","synthetic":false,"types":[]},{"text":"impl Clone for Variant","synthetic":false,"types":[]},{"text":"impl Clone for Uuid","synthetic":false,"types":[]}];
implementors["vec_map"] = [{"text":"impl&lt;V:&nbsp;Clone&gt; Clone for VecMap&lt;V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, V&gt; Clone for Iter&lt;'a, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, V&gt; Clone for Keys&lt;'a, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, V&gt; Clone for Values&lt;'a, V&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()