(function() {var implementors = {};
implementors["chrono"] = [{"text":"impl Sub&lt;Duration&gt; for Duration","synthetic":false,"types":[]},{"text":"impl Sub&lt;FixedOffset&gt; for NaiveTime","synthetic":false,"types":[]},{"text":"impl Sub&lt;FixedOffset&gt; for NaiveDateTime","synthetic":false,"types":[]},{"text":"impl&lt;Tz:&nbsp;TimeZone&gt; Sub&lt;FixedOffset&gt; for DateTime&lt;Tz&gt;","synthetic":false,"types":[]},{"text":"impl Sub&lt;Duration&gt; for NaiveDate","synthetic":false,"types":[]},{"text":"impl Sub&lt;NaiveDate&gt; for NaiveDate","synthetic":false,"types":[]},{"text":"impl Sub&lt;Duration&gt; for NaiveDateTime","synthetic":false,"types":[]},{"text":"impl Sub&lt;NaiveDateTime&gt; for NaiveDateTime","synthetic":false,"types":[]},{"text":"impl Sub&lt;Duration&gt; for NaiveTime","synthetic":false,"types":[]},{"text":"impl Sub&lt;NaiveTime&gt; for NaiveTime","synthetic":false,"types":[]},{"text":"impl&lt;Tz:&nbsp;TimeZone&gt; Sub&lt;Duration&gt; for Date&lt;Tz&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Tz:&nbsp;TimeZone&gt; Sub&lt;Date&lt;Tz&gt;&gt; for Date&lt;Tz&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Tz:&nbsp;TimeZone&gt; Sub&lt;Duration&gt; for DateTime&lt;Tz&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Tz:&nbsp;TimeZone&gt; Sub&lt;DateTime&lt;Tz&gt;&gt; for DateTime&lt;Tz&gt;","synthetic":false,"types":[]}];
implementors["nix"] = [{"text":"impl Sub&lt;AtFlags&gt; for AtFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;OFlag&gt; for OFlag","synthetic":false,"types":[]},{"text":"impl Sub&lt;SealFlag&gt; for SealFlag","synthetic":false,"types":[]},{"text":"impl Sub&lt;FdFlag&gt; for FdFlag","synthetic":false,"types":[]},{"text":"impl Sub&lt;SpliceFFlags&gt; for SpliceFFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;FallocateFlags&gt; for FallocateFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;ModuleInitFlags&gt; for ModuleInitFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;DeleteModuleFlags&gt; for DeleteModuleFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;MsFlags&gt; for MsFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;MntFlags&gt; for MntFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;MQ_OFlag&gt; for MQ_OFlag","synthetic":false,"types":[]},{"text":"impl Sub&lt;FdFlag&gt; for FdFlag","synthetic":false,"types":[]},{"text":"impl Sub&lt;InterfaceFlags&gt; for InterfaceFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;PollFlags&gt; for PollFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;CloneFlags&gt; for CloneFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;EpollFlags&gt; for EpollFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;EpollCreateFlags&gt; for EpollCreateFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;EfdFlags&gt; for EfdFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;MemFdCreateFlag&gt; for MemFdCreateFlag","synthetic":false,"types":[]},{"text":"impl Sub&lt;ProtFlags&gt; for ProtFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;MapFlags&gt; for MapFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;MsFlags&gt; for MsFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;MlockAllFlags&gt; for MlockAllFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;Options&gt; for Options","synthetic":false,"types":[]},{"text":"impl Sub&lt;QuotaValidFlags&gt; for QuotaValidFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;SaFlags&gt; for SaFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;SfdFlags&gt; for SfdFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;SockFlag&gt; for SockFlag","synthetic":false,"types":[]},{"text":"impl Sub&lt;MsgFlags&gt; for MsgFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;SFlag&gt; for SFlag","synthetic":false,"types":[]},{"text":"impl Sub&lt;Mode&gt; for Mode","synthetic":false,"types":[]},{"text":"impl Sub&lt;FsFlags&gt; for FsFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;InputFlags&gt; for InputFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;OutputFlags&gt; for OutputFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;ControlFlags&gt; for ControlFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;LocalFlags&gt; for LocalFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;TimeSpec&gt; for TimeSpec","synthetic":false,"types":[]},{"text":"impl Sub&lt;TimeVal&gt; for TimeVal","synthetic":false,"types":[]},{"text":"impl Sub&lt;WaitPidFlag&gt; for WaitPidFlag","synthetic":false,"types":[]},{"text":"impl Sub&lt;AddWatchFlags&gt; for AddWatchFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;InitFlags&gt; for InitFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;TimerFlags&gt; for TimerFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;TimerSetTimeFlags&gt; for TimerSetTimeFlags","synthetic":false,"types":[]},{"text":"impl Sub&lt;AccessFlags&gt; for AccessFlags","synthetic":false,"types":[]}];
implementors["onig"] = [{"text":"impl Sub&lt;RegexOptions&gt; for RegexOptions","synthetic":false,"types":[]},{"text":"impl Sub&lt;SearchOptions&gt; for SearchOptions","synthetic":false,"types":[]},{"text":"impl Sub&lt;SyntaxOperator&gt; for SyntaxOperator","synthetic":false,"types":[]},{"text":"impl Sub&lt;SyntaxBehavior&gt; for SyntaxBehavior","synthetic":false,"types":[]},{"text":"impl Sub&lt;TraverseCallbackAt&gt; for TraverseCallbackAt","synthetic":false,"types":[]},{"text":"impl Sub&lt;MetaCharType&gt; for MetaCharType","synthetic":false,"types":[]}];
implementors["spinoso_time"] = [{"text":"impl Sub&lt;Time&gt; for Time","synthetic":false,"types":[]},{"text":"impl Sub&lt;Duration&gt; for Time","synthetic":false,"types":[]},{"text":"impl Sub&lt;Duration&gt; for Time","synthetic":false,"types":[]},{"text":"impl Sub&lt;i8&gt; for Time","synthetic":false,"types":[]},{"text":"impl Sub&lt;u8&gt; for Time","synthetic":false,"types":[]},{"text":"impl Sub&lt;i16&gt; for Time","synthetic":false,"types":[]},{"text":"impl Sub&lt;u16&gt; for Time","synthetic":false,"types":[]},{"text":"impl Sub&lt;i32&gt; for Time","synthetic":false,"types":[]},{"text":"impl Sub&lt;u32&gt; for Time","synthetic":false,"types":[]},{"text":"impl Sub&lt;i64&gt; for Time","synthetic":false,"types":[]},{"text":"impl Sub&lt;u64&gt; for Time","synthetic":false,"types":[]},{"text":"impl Sub&lt;f32&gt; for Time","synthetic":false,"types":[]},{"text":"impl Sub&lt;f64&gt; for Time","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()