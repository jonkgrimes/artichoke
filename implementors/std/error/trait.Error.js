(function() {var implementors = {};
implementors["aho_corasick"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["artichoke"] = [{"text":"impl Error for ParserAllocError","synthetic":false,"types":[]},{"text":"impl Error for ParserLineCountError","synthetic":false,"types":[]},{"text":"impl Error for ParserInternalError","synthetic":false,"types":[]}];
implementors["artichoke_backend"] = [{"text":"impl Error for NoBlockGiven","synthetic":false,"types":[]},{"text":"impl Error for UnboxRubyError","synthetic":false,"types":[]},{"text":"impl Error for BoxIntoRubyError","synthetic":false,"types":[]},{"text":"impl Error for ConstantNameError","synthetic":false,"types":[]},{"text":"impl Error for NotDefinedError","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Box&lt;dyn RubyException&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'_&gt; Error for &amp;'_ dyn RubyException","synthetic":false,"types":[]},{"text":"impl Error for CaughtException","synthetic":false,"types":[]},{"text":"impl Error for Utf8Error","synthetic":false,"types":[]},{"text":"impl Error for InvalidEncodingError","synthetic":false,"types":[]},{"text":"impl Error for InterpreterExtractError","synthetic":false,"types":[]},{"text":"impl Error for ConvertBytesError","synthetic":false,"types":[]},{"text":"impl Error for ArenaSavepointError","synthetic":false,"types":[]},{"text":"impl Error for WriteError","synthetic":false,"types":[]},{"text":"impl Error for ArgCountError","synthetic":false,"types":[]}];
implementors["artichoke_core"] = [{"text":"impl Error for IncrementLinenoError","synthetic":false,"types":[]}];
implementors["base64"] = [{"text":"impl Error for DecodeError","synthetic":false,"types":[]}];
implementors["bstr"] = [{"text":"impl Error for FromUtf8Error","synthetic":false,"types":[]},{"text":"impl Error for Utf8Error","synthetic":false,"types":[]}];
implementors["chrono"] = [{"text":"impl Error for ParseError","synthetic":false,"types":[]},{"text":"impl Error for RoundingError","synthetic":false,"types":[]}];
implementors["clap"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["focaccia"] = [{"text":"impl Error for NoSuchCaseFoldingScheme","synthetic":false,"types":[]}];
implementors["getrandom"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["intaglio"] = [{"text":"impl Error for SymbolOverflowError","synthetic":false,"types":[]}];
implementors["nix"] = [{"text":"impl Error for Errno","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["onig"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["rand"] = [{"text":"impl Error for BernoulliError","synthetic":false,"types":[]},{"text":"impl Error for WeightedError","synthetic":false,"types":[]},{"text":"impl Error for ReadError","synthetic":false,"types":[]}];
implementors["rand_core"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["regex"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for CaseFoldError","synthetic":false,"types":[]},{"text":"impl Error for UnicodeWordError","synthetic":false,"types":[]}];
implementors["rustyline"] = [{"text":"impl Error for ReadlineError","synthetic":false,"types":[]}];
implementors["spinoso_env"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for ArgumentError","synthetic":false,"types":[]},{"text":"impl Error for InvalidError","synthetic":false,"types":[]}];
implementors["spinoso_exception"] = [{"text":"impl Error for ArgumentError","synthetic":false,"types":[]},{"text":"impl Error for EncodingError","synthetic":false,"types":[]},{"text":"impl Error for EOFError","synthetic":false,"types":[]},{"text":"impl Error for Exception","synthetic":false,"types":[]},{"text":"impl Error for Fatal","synthetic":false,"types":[]},{"text":"impl Error for FiberError","synthetic":false,"types":[]},{"text":"impl Error for FloatDomainError","synthetic":false,"types":[]},{"text":"impl Error for FrozenError","synthetic":false,"types":[]},{"text":"impl Error for IndexError","synthetic":false,"types":[]},{"text":"impl Error for Interrupt","synthetic":false,"types":[]},{"text":"impl Error for IOError","synthetic":false,"types":[]},{"text":"impl Error for KeyError","synthetic":false,"types":[]},{"text":"impl Error for LoadError","synthetic":false,"types":[]},{"text":"impl Error for LocalJumpError","synthetic":false,"types":[]},{"text":"impl Error for NameError","synthetic":false,"types":[]},{"text":"impl Error for NoMemoryError","synthetic":false,"types":[]},{"text":"impl Error for NoMethodError","synthetic":false,"types":[]},{"text":"impl Error for NotImplementedError","synthetic":false,"types":[]},{"text":"impl Error for RangeError","synthetic":false,"types":[]},{"text":"impl Error for RegexpError","synthetic":false,"types":[]},{"text":"impl Error for RuntimeError","synthetic":false,"types":[]},{"text":"impl Error for ScriptError","synthetic":false,"types":[]},{"text":"impl Error for SecurityError","synthetic":false,"types":[]},{"text":"impl Error for SignalException","synthetic":false,"types":[]},{"text":"impl Error for StandardError","synthetic":false,"types":[]},{"text":"impl Error for StopIteration","synthetic":false,"types":[]},{"text":"impl Error for SyntaxError","synthetic":false,"types":[]},{"text":"impl Error for SystemCallError","synthetic":false,"types":[]},{"text":"impl Error for SystemExit","synthetic":false,"types":[]},{"text":"impl Error for SystemStackError","synthetic":false,"types":[]},{"text":"impl Error for ThreadError","synthetic":false,"types":[]},{"text":"impl Error for TypeError","synthetic":false,"types":[]},{"text":"impl Error for UncaughtThrowError","synthetic":false,"types":[]},{"text":"impl Error for ZeroDivisionError","synthetic":false,"types":[]}];
implementors["spinoso_math"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for DomainError","synthetic":false,"types":[]},{"text":"impl Error for NotImplementedError","synthetic":false,"types":[]}];
implementors["spinoso_random"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for InitializeError","synthetic":false,"types":[]},{"text":"impl Error for UrandomError","synthetic":false,"types":[]},{"text":"impl Error for NewSeedError","synthetic":false,"types":[]},{"text":"impl Error for ArgumentError","synthetic":false,"types":[]}];
implementors["spinoso_securerandom"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for ArgumentError","synthetic":false,"types":[]},{"text":"impl Error for RandomBytesError","synthetic":false,"types":[]},{"text":"impl Error for DomainError","synthetic":false,"types":[]}];
implementors["spinoso_symbol"] = [{"text":"impl Error for SymbolOverflowError","synthetic":false,"types":[]}];
implementors["spinoso_time"] = [{"text":"impl Error for ComponentOutOfRangeError","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["termcolor"] = [{"text":"impl Error for ParseColorError","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()